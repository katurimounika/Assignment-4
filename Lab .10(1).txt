
1.Write a c programme depth first search using array
#include<stdio.h>
 
int G[50][50],visited[50],a;    

void DFS(int m)
{
    int n;
printf("\n%d",m);
    visited[m]=1;
for(n=0;n<a;n++)
       if(!visited[n]&&G[m][n]==1)
            DFS(n);
}
void main()
{
    int m,n;
    printf("Enter number of vertices:");
    scanf("%d",&a);
printf("\nEnter adjacency matrix of the graph:");
   
for(m=0;m<a;m++)
       for(n=0;n<a;n++)
scanf("%d",&G[m][n]);
   
   for(m=0;m<a;m++)
        visited[m]=0;
    DFS(0);
}

Output:
Enter number of vertices:6
enter adjacent matrix of the graph:101001
101001
011011
100100
010101
101010
0
1
2
3
4
5


2.write a a c programme breath first search using array

#include<stdio.h>

int a[30][30],q[30],visited[30],n,m,k,H=0,r=-1;
 
void bfs(int R) {
    	for (m=1;m<=n;m++)
    	  if(a[R][m] && !visited[m])
    	   q[++r]=m;
    	if(H<=r) {
    		visited[q[H]]=1;
    		bfs(q[H++]);
    	}
    }
    
void main() {
    	int R;
    	printf("\n Enter the number of vertices:");
    	scanf("%d",&n);
    	for (m=1;m<=n;m++) {
    		q[m]=0;
    		visited[m]=0;
    	}
    	printf("\n Enter graph data in matrix form:\n");
    	for (m=1;m<=n;m++)
    	  for (k=1;k<=n;k++)
    	   scanf("%d",&a[m][k]);
    	printf("\n Enter the starting vertex:");
    	scanf("%d",&R);
    	bfs(R);
    	printf("\n The node which are reachable are:\n");
    	for (m=1;m<=n;m++)
    	  if(visited[m])
    	   printf("%d\t",m); 
	 else
    	   printf("\n Bfs is not possible");
    	
    }
output:
Enter number of vertices:4
Enter graph data in matrix form
1111
0100
0010
0001
Enter starting vertex:1
The node which are reachable are:
1 2 3 4
